/*! For license information please see vendors-node_modules_react-show-more-text_lib_ShowMoreText_js.js.LICENSE.txt */
(self.webpackChunkfrontend=self.webpackChunkfrontend||[]).push([["vendors-node_modules_react-show-more-text_lib_ShowMoreText_js"],{"./node_modules/react-show-more-text/lib/ShowMoreText.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));\n\nvar _propTypes = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");\n\nvar _Truncate = _interopRequireDefault(__webpack_require__(/*! ./Truncate */ "./node_modules/react-show-more-text/lib/Truncate.js"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar ShowMoreText = /*#__PURE__*/function (_Component) {\n  _inherits(ShowMoreText, _Component);\n\n  var _super = _createSuper(ShowMoreText);\n\n  function ShowMoreText(props) {\n    var _this;\n\n    _classCallCheck(this, ShowMoreText);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), "_isMounted", false);\n\n    _defineProperty(_assertThisInitialized(_this), "handleTruncate", function (truncated) {\n      if (_this._isMounted && truncated !== _this.state.truncated) {\n        _this.setState({\n          truncated: truncated\n        });\n\n        if (truncated) {\n          _this.truncateRef.onResize();\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), "toggleLines", function (event) {\n      event.preventDefault();\n\n      var _self = _assertThisInitialized(_this);\n\n      if (_this._isMounted) {\n        _this.setState({\n          expanded: !_this.state.expanded\n        }, function () {\n          if (_self.props.onClick) {\n            _self.props.onClick(_self.state.expanded);\n          }\n        });\n      }\n    });\n\n    _this.state = {\n      expanded: false,\n      truncated: false\n    };\n    return _this;\n  }\n\n  _createClass(ShowMoreText, [{\n    key: "componentDidMount",\n    value: function componentDidMount() {\n      this._isMounted = true;\n\n      var _self = this;\n\n      if (this._isMounted) {\n        this.setState({\n          expanded: _self.props.expanded\n        });\n      }\n    }\n  }, {\n    key: "componentWillUnmount",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          more = _this$props.more,\n          less = _this$props.less,\n          lines = _this$props.lines,\n          anchorClass = _this$props.anchorClass,\n          className = _this$props.className,\n          width = _this$props.width,\n          keepNewLines = _this$props.keepNewLines,\n          truncatedEndingComponent = _this$props.truncatedEndingComponent;\n      var _this$state = this.state,\n          expanded = _this$state.expanded,\n          truncated = _this$state.truncated;\n      return /*#__PURE__*/_react.default.createElement("div", {\n        className: className\n      }, /*#__PURE__*/_react.default.createElement(_Truncate.default, {\n        width: width,\n        lines: !expanded && lines,\n        ellipsis: /*#__PURE__*/_react.default.createElement("span", null, truncatedEndingComponent, /*#__PURE__*/_react.default.createElement("a", {\n          href: "",\n          className: anchorClass,\n          onClick: this.toggleLines\n        }, more)),\n        onTruncate: this.handleTruncate,\n        ref: function ref(_ref) {\n          return _this2.truncateRef = _ref;\n        }\n      }, keepNewLines ? children.split(\'\\n\').map(function (line, i, arr) {\n        line = /*#__PURE__*/_react.default.createElement("span", {\n          key: i\n        }, line);\n\n        if (i === arr.length - 1) {\n          return line;\n        } else {\n          return [line, /*#__PURE__*/_react.default.createElement("br", {\n            key: i + \'br\'\n          })];\n        }\n      }) : children), !truncated && expanded && /*#__PURE__*/_react.default.createElement("span", null, \' \', /*#__PURE__*/_react.default.createElement("a", {\n        href: "",\n        className: anchorClass,\n        onClick: this.toggleLines\n      }, less)));\n    }\n  }]);\n\n  return ShowMoreText;\n}(_react.Component);\n\n_defineProperty(ShowMoreText, "defaultProps", {\n  lines: 3,\n  more: \'Show more\',\n  less: \'Show less\',\n  anchorClass: \'\',\n  onClick: undefined,\n  expanded: false,\n  width: 0,\n  keepNewLines: false,\n  truncatedEndingComponent: \'... \'\n});\n\n_defineProperty(ShowMoreText, "propTypes", {\n  children: _propTypes.PropTypes.node,\n  lines: _propTypes.PropTypes.number,\n  more: _propTypes.PropTypes.node,\n  less: _propTypes.PropTypes.node,\n  anchorClass: _propTypes.PropTypes.string,\n  className: _propTypes.PropTypes.string,\n  onClick: _propTypes.PropTypes.func,\n  expanded: _propTypes.PropTypes.bool,\n  width: _propTypes.PropTypes.number,\n  keepNewLines: _propTypes.PropTypes.bool,\n  truncatedEndingComponent: _propTypes.PropTypes.node\n});\n\nvar _default = ShowMoreText;\nexports.default = _default;\n\n//# sourceURL=webpack://frontend/./node_modules/react-show-more-text/lib/ShowMoreText.js?')},"./node_modules/react-show-more-text/lib/Truncate.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));\n\nvar _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar Truncate = /*#__PURE__*/function (_React$Component) {\n  _inherits(Truncate, _React$Component);\n\n  var _super = _createSuper(Truncate);\n\n  function Truncate() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _classCallCheck(this, Truncate);\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), "state", {});\n\n    _defineProperty(_assertThisInitialized(_this), "extractReplaceLinksKeys", function (content) {\n      var _self = _assertThisInitialized(_this),\n          i = 0;\n\n      _this.replacedLinks = [];\n      content.replace(/(<a[\\s]+([^>]+)>((?:.(?!\\<\\/a\\>))*.)<\\/a>)/g, function () {\n        var item = Array.prototype.slice.call(arguments, 1, 4);\n        item.key = \'[\' + \'@\'.repeat(item[2].length - 1) + \'=\' + i++ + \']\';\n\n        _self.replacedLinks.push(item);\n\n        content = content.replace(item[0], item.key);\n      });\n      return content;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), "restoreReplacedLinks", function (content) {\n      _this.replacedLinks.forEach(function (item) {\n        content = content.replace(item.key, item[0]);\n      });\n\n      return _this.createMarkup(content);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), "innerText", function (node) {\n      var div = document.createElement(\'div\');\n      var contentKey = \'innerText\' in window.HTMLElement.prototype ? \'innerText\' : \'textContent\';\n      var content = node.innerHTML.replace(/\\r\\n|\\r|\\n/g, \' \');\n      div.innerHTML = _this.extractReplaceLinksKeys(content);\n      var text = div[contentKey];\n      var test = document.createElement(\'div\');\n      test.innerHTML = \'foo<br/>bar\';\n\n      if (test[contentKey].replace(/\\r\\n|\\r/g, \'\\n\') !== \'foo\\nbar\') {\n        div.innerHTML = div.innerHTML.replace(/<br.*?[\\/]?>/gi, \'\\n\');\n        text = div[contentKey];\n      }\n\n      return text;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), "onResize", function () {\n      _this.calcTargetWidth();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), "onTruncate", function (didTruncate) {\n      var onTruncate = _this.props.onTruncate;\n\n      if (typeof onTruncate === \'function\') {\n        _this.timeout = window.requestAnimationFrame(function () {\n          onTruncate(didTruncate);\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), "calcTargetWidth", function (callback) {\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          target = _assertThisInitialize.elements.target,\n          calcTargetWidth = _assertThisInitialize.calcTargetWidth,\n          canvasContext = _assertThisInitialize.canvasContext,\n          width = _assertThisInitialize.props.width; // Calculation is no longer relevant, since node has been removed\n\n\n      if (!target) {\n        return;\n      }\n\n      var targetWidth = width || // Floor the result to deal with browser subpixel precision\n      Math.floor(target.parentNode.getBoundingClientRect().width); // Delay calculation until parent node is inserted to the document\n      // Mounting order in React is ChildComponent, ParentComponent\n\n      if (!targetWidth) {\n        return window.requestAnimationFrame(function () {\n          return calcTargetWidth(callback);\n        });\n      }\n\n      var style = window.getComputedStyle(target);\n      var font = [style[\'font-weight\'], style[\'font-style\'], style[\'font-size\'], style[\'font-family\']].join(\' \');\n      canvasContext.font = font;\n\n      _this.setState({\n        targetWidth: targetWidth\n      }, callback);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), "measureWidth", function (text) {\n      return _this.canvasContext.measureText(text).width;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), "ellipsisWidth", function (node) {\n      return node.offsetWidth;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), "trimRight", function (text) {\n      return text.replace(/\\s+$/, \'\');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), "createMarkup", function (str) {\n      return /*#__PURE__*/_react.default.createElement("span", {\n        dangerouslySetInnerHTML: {\n          __html: str\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), "getLines", function () {\n      var _assertThisInitialize2 = _assertThisInitialized(_this),\n          elements = _assertThisInitialize2.elements,\n          _assertThisInitialize3 = _assertThisInitialize2.props,\n          numLines = _assertThisInitialize3.lines,\n          ellipsis = _assertThisInitialize3.ellipsis,\n          trimWhitespace = _assertThisInitialize3.trimWhitespace,\n          targetWidth = _assertThisInitialize2.state.targetWidth,\n          innerText = _assertThisInitialize2.innerText,\n          measureWidth = _assertThisInitialize2.measureWidth,\n          onTruncate = _assertThisInitialize2.onTruncate,\n          trimRight = _assertThisInitialize2.trimRight,\n          renderLine = _assertThisInitialize2.renderLine,\n          restoreReplacedLinks = _assertThisInitialize2.restoreReplacedLinks;\n\n      var lines = [];\n      var text = innerText(elements.text);\n      var textLines = text.split(\'\\n\').map(function (line) {\n        return line.split(\' \');\n      });\n      var didTruncate = true;\n\n      var ellipsisWidth = _this.ellipsisWidth(_this.elements.ellipsis);\n\n      for (var line = 1; line <= numLines; line++) {\n        var textWords = textLines[0]; // Handle newline\n\n        if (textWords.length === 0) {\n          lines.push();\n          textLines.shift();\n          line--;\n          continue;\n        }\n\n        var resultLine = textWords.join(\' \');\n\n        if (measureWidth(resultLine) <= targetWidth) {\n          if (textLines.length === 1) {\n            // Line is end of text and fits without truncating\n            didTruncate = false;\n            resultLine = restoreReplacedLinks(resultLine);\n            lines.push(resultLine);\n            break;\n          }\n        }\n\n        if (line === numLines) {\n          // Binary search determining the longest possible line inluding truncate string\n          var textRest = textWords.join(\' \');\n          var lower = 0;\n          var upper = textRest.length - 1;\n\n          while (lower <= upper) {\n            var middle = Math.floor((lower + upper) / 2);\n            var testLine = textRest.slice(0, middle + 1);\n\n            if (measureWidth(testLine) + ellipsisWidth <= targetWidth) {\n              lower = middle + 1;\n            } else {\n              upper = middle - 1;\n            }\n          }\n\n          var lastLineText = textRest.slice(0, lower);\n\n          if (trimWhitespace) {\n            lastLineText = trimRight(lastLineText); // Remove blank lines from the end of text\n\n            while (!lastLineText.length && lines.length) {\n              var prevLine = lines.pop();\n              lastLineText = trimRight(prevLine);\n            }\n          }\n\n          if (lastLineText.substr(lastLineText.length - 2) === \'][\') {\n            lastLineText = lastLineText.substring(0, lastLineText.length - 1);\n          }\n\n          ;\n          lastLineText = lastLineText.replace(/\\[@+$/, \'\');\n          lastLineText = restoreReplacedLinks(lastLineText);\n          resultLine = /*#__PURE__*/_react.default.createElement("span", null, lastLineText, ellipsis);\n        } else {\n          // Binary search determining when the line breaks\n          var _lower = 0;\n\n          var _upper = textWords.length - 1;\n\n          while (_lower <= _upper) {\n            var _middle = Math.floor((_lower + _upper) / 2);\n\n            var _testLine = textWords.slice(0, _middle + 1).join(\' \');\n\n            if (measureWidth(_testLine) <= targetWidth) {\n              _lower = _middle + 1;\n            } else {\n              _upper = _middle - 1;\n            }\n          } // The first word of this line is too long to fit it\n\n\n          if (_lower === 0) {\n            // Jump to processing of last line\n            line = numLines - 1;\n            continue;\n          }\n\n          resultLine = textWords.slice(0, _lower).join(\' \');\n          resultLine = restoreReplacedLinks(resultLine);\n          textLines[0].splice(0, _lower);\n        }\n\n        lines.push(resultLine);\n      }\n\n      onTruncate(didTruncate);\n      return lines.map(renderLine);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), "renderLine", function (line, i, arr) {\n      if (i === arr.length - 1) {\n        return /*#__PURE__*/_react.default.createElement("span", {\n          key: i\n        }, line);\n      } else {\n        var br = /*#__PURE__*/_react.default.createElement("br", {\n          key: i + \'br\'\n        });\n\n        if (line) {\n          return [/*#__PURE__*/_react.default.createElement("span", {\n            key: i\n          }, line), br];\n        } else {\n          return br;\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), "styles", {\n      ellipsis: {\n        position: \'fixed\',\n        visibility: \'hidden\',\n        top: 0,\n        left: 0\n      }\n    });\n\n    _this.elements = {};\n    _this.replacedLinks = [];\n    return _this;\n  }\n\n  _createClass(Truncate, [{\n    key: "componentDidMount",\n    value: function componentDidMount() {\n      var text = this.elements.text,\n          calcTargetWidth = this.calcTargetWidth,\n          onResize = this.onResize;\n      var canvas = document.createElement(\'canvas\');\n      this.canvasContext = canvas.getContext(\'2d\');\n      calcTargetWidth(function () {\n        // Node not needed in document tree to read its content\n        if (text) {\n          text.parentNode.removeChild(text);\n        }\n      });\n      window.addEventListener(\'resize\', onResize);\n    }\n  }, {\n    key: "componentDidUpdate",\n    value: function componentDidUpdate(prevProps) {\n      // Render was based on outdated refs and needs to be rerun\n      if (this.props.children !== prevProps.children) {\n        this.forceUpdate();\n      } // If the width prop has changed, recalculate size of contents\n\n\n      if (this.props.width !== prevProps.width) {\n        this.calcTargetWidth();\n      }\n    }\n  }, {\n    key: "componentWillUnmount",\n    value: function componentWillUnmount() {\n      var ellipsis = this.elements.ellipsis,\n          onResize = this.onResize,\n          timeout = this.timeout;\n      ellipsis.parentNode.removeChild(ellipsis);\n      window.removeEventListener(\'resize\', onResize);\n      window.cancelAnimationFrame(timeout);\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _this2 = this;\n\n      var target = this.elements.target,\n          _this$props = this.props,\n          children = _this$props.children,\n          ellipsis = _this$props.ellipsis,\n          lines = _this$props.lines,\n          spanProps = _objectWithoutProperties(_this$props, ["children", "ellipsis", "lines"]),\n          targetWidth = this.state.targetWidth,\n          getLines = this.getLines,\n          onTruncate = this.onTruncate;\n\n      var text;\n      var mounted = !!(target && targetWidth);\n\n      if (typeof window !== \'undefined\' && mounted) {\n        if (lines > 0) {\n          text = getLines();\n        } else {\n          text = children;\n          onTruncate(false);\n        }\n      }\n\n      delete spanProps.onTruncate;\n      delete spanProps.trimWhitespace;\n      return /*#__PURE__*/_react.default.createElement("span", _extends({}, spanProps, {\n        ref: function ref(targetEl) {\n          _this2.elements.target = targetEl;\n        }\n      }), /*#__PURE__*/_react.default.createElement("span", null, text), /*#__PURE__*/_react.default.createElement("span", {\n        ref: function ref(textEl) {\n          _this2.elements.text = textEl;\n        }\n      }, children), /*#__PURE__*/_react.default.createElement("span", {\n        ref: function ref(ellipsisEl) {\n          _this2.elements.ellipsis = ellipsisEl;\n        },\n        style: this.styles.ellipsis\n      }, ellipsis));\n    }\n  }]);\n\n  return Truncate;\n}(_react.default.Component);\n\nexports.default = Truncate;\n\n_defineProperty(Truncate, "propTypes", {\n  children: _propTypes.default.node,\n  ellipsis: _propTypes.default.node,\n  lines: _propTypes.default.oneOfType([_propTypes.default.oneOf([false]), _propTypes.default.number]),\n  trimWhitespace: _propTypes.default.bool,\n  width: _propTypes.default.number,\n  onTruncate: _propTypes.default.func\n});\n\n_defineProperty(Truncate, "defaultProps", {\n  children: \'\',\n  ellipsis: \'…\',\n  lines: 1,\n  trimWhitespace: false,\n  width: 0\n});\n\n;\n\n//# sourceURL=webpack://frontend/./node_modules/react-show-more-text/lib/Truncate.js?')}}]);